{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ThemeToggle = function ThemeToggle(_ref) {\n  var isDarkMode = _ref.isDarkMode,\n    toggleTheme = _ref.toggleTheme;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Switch, {\n      value: isDarkMode,\n      onValueChange: toggleTheme\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    alignItems: 'center'\n  }\n});\nexport default ThemeToggle;","map":{"version":3,"names":["React","View","Switch","StyleSheet","jsx","_jsx","ThemeToggle","_ref","isDarkMode","toggleTheme","style","styles","container","children","value","onValueChange","create","padding","alignItems"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/components/ThemeToggle.js"],"sourcesContent":["import React from 'react';\nimport { View, Switch, StyleSheet } from 'react-native';\n\nconst ThemeToggle = ({ isDarkMode, toggleTheme }) => {\n  return (\n    <View style={styles.container}>\n      <Switch\n        value={isDarkMode}\n        onValueChange={toggleTheme}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    alignItems: 'center',\n  },\n});\n\nexport default ThemeToggle;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG1B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAoC;EAAA,IAA9BC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;EAC5C,OACEJ,IAAA,CAACJ,IAAI;IAACS,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BR,IAAA,CAACH,MAAM;MACLY,KAAK,EAAEN,UAAW;MAClBO,aAAa,EAAEN;IAAY,CAC5B;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAGR,UAAU,CAACa,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAeZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}