{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Radio } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SERVER_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\nvar QuestForgeScreen = function QuestForgeScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userChoice = _useState4[0],\n    setUserChoice = _useState4[1];\n  useEffect(function () {\n    fetchDataAndDisplay();\n  }, []);\n  var populateFormWithData = function populateFormWithData(responseData) {\n    setData(responseData);\n  };\n  var fetchDataAndDisplay = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(`${SERVER_URL}/adventure`);\n        var responseData = response.data;\n        populateFormWithData(responseData);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function fetchDataAndDisplay() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleUserChoice = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (userChoice !== null && data !== null) {\n        var response = yield axios.post(`${SERVER_URL}/adventure`, _objectSpread(_objectSpread({}, data), {}, {\n          userChoice: userChoice\n        }));\n        populateFormWithData(response.data);\n      }\n    });\n    return function handleUserChoice() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderOptions = function renderOptions() {\n    if (data && !data.deathScene) {\n      return data.options.map(function (option, index) {\n        return _jsxs(View, {\n          children: [_jsx(Radio, {\n            value: option,\n            checked: userChoice === option,\n            onValueChange: function onValueChange() {\n              return setUserChoice(option);\n            }\n          }), _jsx(Text, {\n            children: option\n          })]\n        }, index);\n      });\n    } else {\n      return null;\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Quest Forge\"\n    }), _jsx(View, {\n      style: styles.userInfo,\n      children: data ? data.deathScene ? _jsx(Text, {\n        style: styles.deathScene,\n        children: data.deathScene\n      }) : _jsxs(View, {\n        children: [_jsxs(Text, {\n          children: [\"Name: \", data.user.name]\n        }), _jsxs(Text, {\n          children: [\"Age: \", data.user.age]\n        }), _jsxs(Text, {\n          children: [\"Race: \", data.user.race]\n        }), _jsxs(Text, {\n          children: [\"Class: \", data.user.class]\n        })]\n      }) : _jsx(Text, {\n        children: \"Loading...\"\n      })\n    }), data && data.scene ? _jsx(Text, {\n      style: styles.scene,\n      children: data.scene\n    }) : null, data && !data.deathScene && _jsxs(View, {\n      style: styles.form,\n      children: [renderOptions(), _jsx(Button, {\n        title: \"Submit Choice\",\n        onPress: handleUserChoice\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f0f8ff'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#E63946'\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#E63946',\n    marginBottom: 20\n  },\n  deathScene: {\n    fontSize: 18,\n    color: 'red',\n    textAlign: 'center'\n  },\n  scene: {\n    fontSize: 18,\n    color: '#333',\n    textAlign: 'center',\n    marginVertical: 10\n  },\n  optionsContainer: {\n    marginTop: 20\n  },\n  optionsHeader: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: '#4e9af1',\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center'\n  }\n});\nexport default QuestForgeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Radio","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","SERVER_URL","QuestForgeScreen","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","userChoice","setUserChoice","fetchDataAndDisplay","populateFormWithData","responseData","_ref","_asyncToGenerator","response","post","error","console","apply","arguments","handleUserChoice","_ref2","_objectSpread","renderOptions","deathScene","options","map","option","index","children","value","checked","onValueChange","style","styles","container","title","userInfo","user","name","age","race","class","scene","form","onPress","create","flex","alignItems","justifyContent","padding","backgroundColor","fontSize","fontWeight","textAlign","color","header","marginBottom","marginVertical","optionsContainer","marginTop","optionsHeader","button","borderRadius","buttonText"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/screens/QuestForgeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, Radio, StyleSheet } from 'react-native';\nimport axios from 'axios';\n\nconst SERVER_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\n\nconst QuestForgeScreen = () => {\n  const [data, setData] = useState(null);\n  const [userChoice, setUserChoice] = useState(null);\n\n  useEffect(() => {\n    fetchDataAndDisplay();\n  }, []);\n\n  const populateFormWithData = (responseData) => {\n    setData(responseData);\n  };\n\n  const fetchDataAndDisplay = async () => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/adventure`);\n      const responseData = response.data;\n      populateFormWithData(responseData);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleUserChoice = async () => {\n    if (userChoice !== null && data !== null) {\n      const response = await axios.post(`${SERVER_URL}/adventure`, {\n        ...data,\n        userChoice,\n      });\n      populateFormWithData(response.data);\n    }\n  };\n\n  const renderOptions = () => {\n    if (data && !data.deathScene) {\n      return data.options.map((option, index) => (\n        <View key={index}>\n          <Radio\n            value={option}\n            checked={userChoice === option}\n            onValueChange={() => setUserChoice(option)}\n          />\n          <Text>{option}</Text>\n        </View>\n      ));\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Quest Forge</Text>\n      <View style={styles.userInfo}>\n        {data ? (\n          data.deathScene ? (\n            <Text style={styles.deathScene}>{data.deathScene}</Text>\n          ) : (\n            <View>\n              <Text>Name: {data.user.name}</Text>\n              <Text>Age: {data.user.age}</Text>\n              <Text>Race: {data.user.race}</Text>\n              <Text>Class: {data.user.class}</Text>\n            </View>\n          )\n        ) : (\n          <Text>Loading...</Text>\n        )}\n      </View>\n      {data && data.scene ? <Text style={styles.scene}>{data.scene}</Text> : null}\n      {data && !data.deathScene && (\n        <View style={styles.form}>\n          {renderOptions()}\n          <Button title=\"Submit Choice\" onPress={handleUserChoice} />\n        </View>\n      )}\n    </View>\n  );\n};\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 20,\n      backgroundColor: '#f0f8ff',\n    },\n    title: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      color: '#E63946',\n    },\n    header: {\n      fontSize: 30,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      color: '#E63946',\n      marginBottom: 20,\n    },\n    deathScene: {\n      fontSize: 18,\n      color: 'red',\n      textAlign: 'center',\n    },\n    scene: {\n      fontSize: 18,\n      color: '#333',\n      textAlign: 'center',\n      marginVertical: 10,\n    },\n    optionsContainer: {\n      marginTop: 20,\n    },\n    optionsHeader: {\n      fontSize: 22,\n      fontWeight: 'bold',\n      color: '#333',\n      marginBottom: 10,\n    },\n    button: {\n      backgroundColor: '#4e9af1',\n      padding: 10,\n      marginVertical: 5,\n      borderRadius: 5,\n    },\n    buttonText: {\n      color: 'white',\n      textAlign: 'center',\n    },\n  });\n\nexport default QuestForgeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}