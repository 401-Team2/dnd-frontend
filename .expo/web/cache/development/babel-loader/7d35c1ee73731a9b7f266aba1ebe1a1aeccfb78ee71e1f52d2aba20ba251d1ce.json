{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar QuestForgeScreen = function QuestForgeScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userChoice = _useState4[0],\n    setUserChoice = _useState4[1];\n  useEffect(function () {\n    fetchDataAndDisplay();\n  }, []);\n  var populateFormWithData = function populateFormWithData(responseData) {\n    setData(responseData);\n  };\n  var fetchDataAndDisplay = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(`https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST/user/1`);\n        var responseData = response.data;\n        console.log(\"HERE'S THE RESPONSE \", response);\n        populateFormWithData(responseData);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function fetchDataAndDisplay() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleUserChoice = function () {\n    var _ref3 = _asyncToGenerator(function* (event) {\n      event.preventDefault();\n      if (userChoice !== null && data !== null) {\n        var response = yield axios.post(`https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST/user/{USER_ID}`, _objectSpread(_objectSpread({}, data), {}, {\n          userChoice: userChoice\n        }));\n        var generatedStory = response.data.story;\n        populateFormWithData(generatedStory);\n      }\n    });\n    return function handleUserChoice(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderOptions = function renderOptions() {\n    if (data && !data.deathScene) {\n      return data.options.map(function (option, index) {\n        return _jsxs(View, {\n          children: [_jsx(TextInput, {\n            style: styles.optionButton,\n            name: \"userChoice\",\n            value: index,\n            id: `option${index}`,\n            onChange: function onChange(e) {\n              return setUserChoice(option);\n            },\n            checked: userChoice === option\n          }), _jsx(\"label\", {\n            htmlFor: `option${index}`,\n            children: option\n          })]\n        }, index);\n      });\n    } else {\n      return _jsx(Text, {\n        children: \"Loading...\"\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Quest Forge\"\n    }), _jsx(View, {\n      style: styles.userInfo,\n      children: data ? data.deathScene ? _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.deathScene,\n          children: data.deathScene\n        })\n      }) : _jsxs(View, {\n        children: [_jsxs(Text, {\n          children: [\"Name: \", _jsx(Text, {\n            style: styles.userName,\n            children: data.user.name\n          })]\n        }), _jsxs(Text, {\n          children: [\"ID: \", _jsx(Text, {\n            style: styles.userID,\n            children: data.user.id\n          })]\n        }), _jsxs(Text, {\n          children: [\"Age: \", _jsx(Text, {\n            style: styles.userAge,\n            children: data.user.age\n          })]\n        }), _jsxs(Text, {\n          children: [\"Race: \", _jsx(Text, {\n            style: styles.userRace,\n            children: data.user.race\n          })]\n        }), _jsxs(Text, {\n          children: [\"Class: \", _jsx(Text, {\n            style: styles.userClass,\n            children: data.user.class\n          })]\n        })]\n      }) : _jsx(Text, {\n        children: \"Loading...\"\n      })\n    }), data && data.scene ? _jsx(Text, {\n      style: styles.scene,\n      children: data.scene\n    }) : null, data && !data.deathScene ? _jsxs(View, {\n      style: styles.optionsForm,\n      onSubmit: handleUserChoice,\n      children: [_jsx(Text, {\n        style: styles.legend,\n        children: \"Options\"\n      }), _jsx(View, {\n        style: styles.optionsList,\n        children: renderOptions()\n      }), _jsx(TouchableOpacity, {\n        title: \"Submit Choice\",\n        onPress: handleUserChoice\n      })]\n    }) : null]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  optionsContainer: {\n    marginVertical: 20\n  },\n  optionButton: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 5\n  },\n  optionText: {\n    fontSize: 16\n  },\n  scene: {\n    fontSize: 18,\n    marginBottom: 20\n  }\n});\nexport default QuestForgeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","TextInput","Picker","TouchableOpacity","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","QuestForgeScreen","_ref","route","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","userChoice","setUserChoice","fetchDataAndDisplay","populateFormWithData","responseData","_ref2","_asyncToGenerator","response","post","console","log","error","apply","arguments","handleUserChoice","_ref3","event","preventDefault","_objectSpread","generatedStory","story","_x","renderOptions","deathScene","options","map","option","index","children","style","styles","optionButton","name","value","id","onChange","e","checked","htmlFor","container","title","userInfo","userName","user","userID","userAge","age","userRace","race","userClass","class","scene","optionsForm","onSubmit","legend","optionsList","onPress","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","optionsContainer","marginVertical","backgroundColor","borderRadius","optionText","marginBottom"],"sources":["/Users/josh/401/labs/401-final-frontend/quest-forge-2.0-frontend/src/screens/QuestForgeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  TextInput,\n  Picker,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\n// import api from '../api/Api';\n// import { startNewGame, generateStory } from '../api/Api';\n\nimport axios from 'axios';\n\n// const API_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\n\nconst QuestForgeScreen = ({ route }) => {\n  const [data, setData] = useState(null);\n  const [userChoice, setUserChoice] = useState(null);\n\n  // const API_URL = 'http://localhost:3001';\n\n  // useEffect(() => {\n  //   if (route.params?.newGame) {\n  //     console.log(\"Received character data:\", route.params.character);\n\n  //     fetchDataAndDisplay();\n  //   }\n  // }, [route.params]);\n\n  // const fetchDataAndDisplay = async () => {\n  //   try {\n  //     const gameData = await startNewGame({ characterData: route.params.character });\n  //     setData(gameData);\n  //   } catch (error) {\n  //     console.error('Error starting new game:', error);\n  //   }\n  // };\n\n  // // const continueGame = async (character) => {\n  // //   try {\n  // //     const data = await api.loadGame(character.id);\n  // //     setData(data);\n  // //   } catch (error) {\n  // //     console.error('Error:', error);\n  // //   }\n  // // };\n\n  // const handleUserChoice = async () => {\n  //   try {\n  //     const storyPrompt = \"Your prompt based on user choice and game data\";\n  //     const storyData = await generateStory({ prompt: storyPrompt });\n\n  //     setData(prevData => ({ ...prevData, currentScene: storyData.story }));\n  //   } catch (error) {\n  //     console.error('Error generating story:', error);\n  //   }\n  // };\n\n  useEffect(() => {\n    fetchDataAndDisplay();\n  }, []);\n\n  const populateFormWithData = (responseData) => {\n    setData(responseData);\n  };\n\n  const fetchDataAndDisplay = async () => {\n    try {\n      // Make a POST request using Axios\n      const response = await axios.post(\n        // `https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST`\n        `https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST/user/1`\n      );\n      const responseData = response.data;\n      console.log(\"HERE'S THE RESPONSE \", response);\n\n      // Populate the form with the initial response\n      populateFormWithData(responseData);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleUserChoice = async (event) => {\n    event.preventDefault();\n    if (userChoice !== null && data !== null) {\n      const response = await axios.post(\n        `https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST/user/{USER_ID}`,\n        {\n          ...data,\n          userChoice,\n        }\n      );\n      const generatedStory = response.data.story;\n      // const updatedData = response.data;\n      populateFormWithData(generatedStory);\n    }\n  };\n\n  const renderOptions = () => {\n    if (data && !data.deathScene) {\n      return data.options.map((option, index) => (\n        <View key={index}>\n          <TextInput\n            style={styles.optionButton}\n            name=\"userChoice\"\n            value={index}\n            id={`option${index}`}\n            onChange={(e) => setUserChoice(option)}\n            checked={userChoice === option}\n          />\n          <label htmlFor={`option${index}`}>{option}</label>\n          {/* <Text>Name: <Text style={styles.userName}>{data.user.name}</Text></Text>\n          <Text>Age: <Text style={styles.userAge}>{data.user.age}</Text></Text>\n          <Text>Race: <Text style={styles.userRace}>{data.user.race}</Text></Text>\n          <Text>Class: <Text style={styles.userClass}>{data.user.class}</Text></Text> */}\n        </View>\n      ));\n    } else {\n      return <Text>Loading...</Text>;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Quest Forge</Text>\n      <View style={styles.userInfo}>\n        {/* {renderUserData()} */}\n        {data ? (\n          data.deathScene ? (\n            <View>\n              <Text style={styles.deathScene}>{data.deathScene}</Text>\n            </View>\n          ) : (\n            <View>\n              <Text>\n                Name: <Text style={styles.userName}>{data.user.name}</Text>\n              </Text>\n              <Text>\n                ID: <Text style={styles.userID}>{data.user.id}</Text>\n              </Text>\n              <Text>\n                Age: <Text style={styles.userAge}>{data.user.age}</Text>\n              </Text>\n              <Text>\n                Race: <Text style={styles.userRace}>{data.user.race}</Text>\n              </Text>\n              <Text>\n                Class: <Text style={styles.userClass}>{data.user.class}</Text>\n              </Text>\n            </View>\n          )\n        ) : (\n          <Text>Loading...</Text>\n        )}\n      </View>\n      {data && data.scene ? (\n        <Text style={styles.scene}>{data.scene}</Text>\n      ) : null}\n      {data && !data.deathScene ? (\n        <View style={styles.optionsForm} onSubmit={handleUserChoice}>\n          <Text style={styles.legend}>Options</Text>\n          <View style={styles.optionsList}>{renderOptions()}</View>\n          <TouchableOpacity title=\"Submit Choice\" onPress={handleUserChoice} />\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  optionsContainer: {\n    marginVertical: 20,\n  },\n  optionButton: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 5,\n  },\n  optionText: {\n    fontSize: 16,\n  },\n  scene: {\n    fontSize: 18,\n    marginBottom: 20,\n  },\n});\n\nexport default QuestForgeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}