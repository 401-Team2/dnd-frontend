{"ast":null,"code":"import React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme } from \"../utils/ThemeContext\";\nimport ThemeToggle from \"../components/ThemeToggle\";\nimport bgImg from \"../../assets/bgImg.jpeg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme;\n  return _jsxs(ImageBackground, {\n    source: bgImg,\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      opacity: 0.9\n    },\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Options\"\n    }), _jsx(ThemeToggle, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 20\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","ImageBackground","Text","StyleSheet","useTheme","ThemeToggle","bgImg","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useTheme","isDarkMode","toggleTheme","source","style","flex","justifyContent","alignItems","opacity","children","styles","title","create","container","fontSize","marginBottom"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/screens/SettingsScreen.js"],"sourcesContent":["import React from 'react';\nimport { ImageBackground, Text, StyleSheet } from 'react-native';\nimport { useTheme } from '../utils/ThemeContext';\nimport ThemeToggle from '../components/ThemeToggle';\nimport bgImg from '../../assets/bgImg.jpeg';\n\nconst SettingsScreen = () => {\n  const { isDarkMode, toggleTheme } = useTheme();\n\n  return (\n    <ImageBackground \n      source={bgImg}\n      style={{flex: 1, justifyContent: 'center', alignItems: 'center', opacity: 0.9}}\n    >\n      <Text style={styles.title}>Options</Text>\n      <ThemeToggle isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 20,\n  },\n});\n\nexport default SettingsScreen;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,eAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,QAAQ;AACjB,OAAOC,WAAW;AAClB,OAAOC,KAAK;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAAC,SAAA,GAAoCR,QAAQ,CAAC,CAAC;IAAtCS,UAAU,GAAAD,SAAA,CAAVC,UAAU;IAAEC,WAAW,GAAAF,SAAA,CAAXE,WAAW;EAE/B,OACEJ,KAAA,CAACT,eAAe;IACdc,MAAM,EAAET,KAAM;IACdU,KAAK,EAAE;MAACC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GAE/Eb,IAAA,CAACN,IAAI;MAACc,KAAK,EAAEM,MAAM,CAACC,KAAM;MAAAF,QAAA,EAAC;IAAO,CAAM,CAAC,EACzCb,IAAA,CAACH,WAAW;MAACQ,UAAU,EAAEA,UAAW;MAACC,WAAW,EAAEA;IAAY,CAAE,CAAC;EAAA,CAClD,CAAC;AAEtB,CAAC;AAED,IAAMQ,MAAM,GAAGnB,UAAU,CAACqB,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTR,IAAI,EAAE,CAAC;IACPE,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDK,KAAK,EAAE;IACLG,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAehB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}