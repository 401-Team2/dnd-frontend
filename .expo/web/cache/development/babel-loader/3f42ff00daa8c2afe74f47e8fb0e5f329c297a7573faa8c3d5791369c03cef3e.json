{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Radio } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport api from \"../api/Api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar QuestForgeScreen = function QuestForgeScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userChoice = _useState4[0],\n    setUserChoice = _useState4[1];\n  useEffect(function () {\n    var _route$params, _route$params2;\n    if ((_route$params = route.params) != null && _route$params.newGame) {\n      fetchDataAndDisplay();\n    } else if ((_route$params2 = route.params) != null && _route$params2.character) {\n      var character = route.params.character;\n      continueGame(character);\n    }\n  }, [route.params]);\n  var fetchDataAndDisplay = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _data = yield api.startNewGame();\n        setData(_data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function fetchDataAndDisplay() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var continueGame = function () {\n    var _ref3 = _asyncToGenerator(function* (character) {\n      try {\n        var _data2 = yield api.loadGame(character.id);\n        setData(_data2);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function continueGame(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleUserChoice = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var updatedData = yield api.continueGame(data, userChoice);\n        setData(updatedData);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function handleUserChoice() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderOptions = function renderOptions() {\n    if (data && data.options) {\n      return data.options.map(function (option, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.optionButton,\n          onPress: function onPress() {\n            return setUserChoice(option);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: option\n          })\n        }, index);\n      });\n    } else {\n      return _jsx(Text, {\n        children: \"No options available\"\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: \"Quest Forge Adventure\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\nexport default QuestForgeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Radio","StyleSheet","api","jsx","_jsx","QuestForgeScreen","_ref","route","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","userChoice","setUserChoice","_route$params","_route$params2","params","newGame","fetchDataAndDisplay","character","continueGame","_ref2","_asyncToGenerator","startNewGame","error","console","apply","arguments","_ref3","loadGame","id","_x","handleUserChoice","_ref4","updatedData","renderOptions","options","map","option","index","TouchableOpacity","style","styles","optionButton","onPress","children","optionText","container","title","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/screens/QuestForgeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, Radio, StyleSheet } from 'react-native';\nimport api from '../api/Api';\n// import axios from 'axios';\n\n// const SERVER_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\n\nconst QuestForgeScreen = ({ route }) => {\n  const [data, setData] = useState(null);\n  const [userChoice, setUserChoice] = useState(null);\n\n  useEffect(() => {\n    if (route.params?.newGame) {\n      fetchDataAndDisplay();\n    } else if (route.params?.character) {\n      const character = route.params.character;\n      continueGame(character);\n    }\n  }, [route.params]);\n\n  const fetchDataAndDisplay = async () => {\n    try {\n      const data = await api.startNewGame();\n      setData(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n  const continueGame = async (character) => {\n    try {\n      const data = await api.loadGame(character.id);\n      setData(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n  const handleUserChoice = async () => {\n    try {\n      const updatedData = await api.continueGame(data, userChoice);\n      setData(updatedData);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const renderOptions = () => {\n    if (data && data.options) {\n      return data.options.map((option, index) => (\n        <TouchableOpacity \n          key={index} \n          style={styles.optionButton}\n          onPress={() => setUserChoice(option)}\n        >\n          <Text style={styles.optionText}>{option}</Text>\n        </TouchableOpacity>\n      ));\n    } else {\n      return <Text>No options available</Text>;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Quest Forge Adventure</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default QuestForgeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}