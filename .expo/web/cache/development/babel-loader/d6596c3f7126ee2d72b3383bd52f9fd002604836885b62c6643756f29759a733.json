{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CharacterCard from \"../components/CharacterCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoadGameScreen = function LoadGameScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    characters = _useState2[0],\n    setCharacters = _useState2[1];\n  useEffect(function () {\n    fetchCharacters();\n  }, []);\n  var fetchCharacters = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var charactersData = yield api.fetchCharacters();\n        setCharacters(charactersData);\n      } catch (error) {\n        console.error('Error fetching characters:', error);\n      }\n    });\n    return function fetchCharacters() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCharacterSelect = function handleCharacterSelect(character) {\n    navigation.navigate('QuestForge', {\n      character: character\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Load Game\"\n    }), _jsx(FlatList, {\n      data: characters,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(CharacterCard, {\n          character: item,\n          onSelect: function onSelect() {\n            return handleCharacterSelect(item);\n          }\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  }\n});\nexport default LoadGameScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","FlatList","StyleSheet","CharacterCard","jsx","_jsx","jsxs","_jsxs","LoadGameScreen","_ref","navigation","_useState","_useState2","_slicedToArray","characters","setCharacters","fetchCharacters","_ref2","_asyncToGenerator","charactersData","api","error","console","apply","arguments","handleCharacterSelect","character","navigate","style","styles","container","children","title","data","keyExtractor","item","id","toString","renderItem","_ref3","onSelect","create","flex","alignItems","justifyContent","fontSize","marginBottom"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/screens/LoadGameScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, FlatList, StyleSheet } from 'react-native';\n// import axios from 'axios';\nimport CharacterCard from '../components/CharacterCard';\n\nconst LoadGameScreen = ({ navigation }) => {\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    fetchCharacters();\n  }, []);\n\n  const fetchCharacters = async () => {\n    try {\n      const charactersData = await api.fetchCharacters();\n      setCharacters(charactersData);\n    } catch (error) {\n      console.error('Error fetching characters:', error);\n    }\n  };\n\n  const handleCharacterSelect = (character) => {\n    navigation.navigate('QuestForge', { character: character });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Load Game</Text>\n      <FlatList\n        data={characters}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={({ item }) => (\n          <CharacterCard \n            character={item} \n            onSelect={() => handleCharacterSelect(item)} \n          />\n        )}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n});\n\nexport default LoadGameScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAGnD,OAAOC,aAAa;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAAC,SAAA,GAAoCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhCf,SAAS,CAAC,YAAM;IACdmB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,eAAe;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAClC,IAAI;QACF,IAAMC,cAAc,SAASC,GAAG,CAACJ,eAAe,CAAC,CAAC;QAClDD,aAAa,CAACI,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAAA,gBAPKL,eAAeA,CAAA;MAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOpB;EAED,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,SAAS,EAAK;IAC3ChB,UAAU,CAACiB,QAAQ,CAAC,YAAY,EAAE;MAAED,SAAS,EAAEA;IAAU,CAAC,CAAC;EAC7D,CAAC;EAED,OACEnB,KAAA,CAACT,IAAI;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B1B,IAAA,CAACN,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAS,CAAM,CAAC,EAC3C1B,IAAA,CAACJ,QAAQ;MACPgC,IAAI,EAAEnB,UAAW;MACjBoB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;QAAA,OACjB9B,IAAA,CAACF,aAAa;UACZuB,SAAS,EAAES,IAAK;UAChBK,QAAQ,EAAE,SAAAA,SAAA;YAAA,OAAMf,qBAAqB,CAACU,IAAI,CAAC;UAAA;QAAC,CAC7C,CAAC;MAAA;IACF,CACH,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMN,MAAM,GAAG3B,UAAU,CAACuC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDZ,KAAK,EAAE;IACLa,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAetC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}