{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport api from \"../api/Api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar QuestForgeScreen = function QuestForgeScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userChoice = _useState4[0],\n    setUserChoice = _useState4[1];\n  useEffect(function () {\n    var _route$params, _route$params2;\n    if ((_route$params = route.params) != null && _route$params.newGame) {\n      fetchDataAndDisplay();\n    } else if ((_route$params2 = route.params) != null && _route$params2.character) {\n      continueGame(route.params.character);\n    }\n  }, [route.params]);\n  var fetchDataAndDisplay = function fetchDataAndDisplay() {\n    var _data;\n    return _regeneratorRuntime.async(function fetchDataAndDisplay$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(api.startNewGame());\n        case 3:\n          _data = _context.sent;\n          setData(_data);\n          _context.next = 10;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error:', _context.t0);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n  var continueGame = function continueGame(character) {\n    var _data2;\n    return _regeneratorRuntime.async(function continueGame$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(api.loadGame(character.id));\n        case 3:\n          _data2 = _context2.sent;\n          setData(_data2);\n          _context2.next = 10;\n          break;\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('Error:', _context2.t0);\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n  var handleUserChoice = function handleUserChoice() {\n    var updatedData;\n    return _regeneratorRuntime.async(function handleUserChoice$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(api.continueGame(data, userChoice));\n        case 3:\n          updatedData = _context3.sent;\n          setData(updatedData);\n          _context3.next = 10;\n          break;\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error('Error:', _context3.t0);\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n  var renderOptions = function renderOptions() {\n    if (data && data.options) {\n      return data.options.map(function (option, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.optionButton,\n          onPress: function onPress() {\n            return setUserChoice(option);\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: option\n          })\n        }, index);\n      });\n    } else {\n      return _jsx(Text, {\n        children: \"No options available\"\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Quest Forge Adventure\"\n    }), data && data.scene && _jsx(Text, {\n      style: styles.scene,\n      children: data.scene\n    }), _jsx(View, {\n      style: styles.optionsContainer,\n      children: renderOptions()\n    }), _jsx(Button, {\n      title: \"Submit Choice\",\n      onPress: handleUserChoice\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  optionsContainer: {\n    marginVertical: 20\n  },\n  optionButton: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 5\n  },\n  optionText: {\n    fontSize: 16\n  },\n  scene: {\n    fontSize: 18,\n    marginBottom: 20\n  }\n});\nexport default QuestForgeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","TextInput","Picker","TouchableOpacity","StyleSheet","api","jsx","_jsx","jsxs","_jsxs","QuestForgeScreen","_ref","route","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","userChoice","setUserChoice","_route$params","_route$params2","params","newGame","fetchDataAndDisplay","character","continueGame","_data","_regeneratorRuntime","async","fetchDataAndDisplay$","_context","prev","next","awrap","startNewGame","sent","t0","console","error","stop","Promise","_data2","continueGame$","_context2","loadGame","id","handleUserChoice","updatedData","handleUserChoice$","_context3","renderOptions","options","map","option","index","style","styles","optionButton","onPress","children","optionText","container","title","scene","optionsContainer","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginVertical","backgroundColor","borderRadius","marginBottom"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/screens/QuestForgeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, TextInput, Picker, TouchableOpacity, StyleSheet } from 'react-native';\nimport api from '../api/Api';\n// import axios from 'axios';\n\n// const SERVER_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\n\nconst QuestForgeScreen = ({ route }) => {\n  const [data, setData] = useState(null);\n  const [userChoice, setUserChoice] = useState(null);\n\n  useEffect(() => {\n    if (route.params?.newGame) {\n      fetchDataAndDisplay();\n    } else if (route.params?.character) {\n    //   const character = route.params.character;\n    //   continueGame(character);\n      continueGame(route.params.character);\n    }\n  }, [route.params]);\n\n  const fetchDataAndDisplay = async () => {\n    try {\n      const data = await api.startNewGame();\n      setData(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n  const continueGame = async (character) => {\n    try {\n      const data = await api.loadGame(character.id);\n      setData(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n//   const continueGame = async (character) => {\n//     try {\n//       const gameData = await api.loadGame(character.id);\n//       setData(gameData);\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n  \n  const handleUserChoice = async () => {\n    try {\n      const updatedData = await api.continueGame(data, userChoice);\n      setData(updatedData);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const renderOptions = () => {\n    if (data && data.options) {\n      return data.options.map((option, index) => (\n        <TouchableOpacity \n          key={index} \n          style={styles.optionButton}\n          onPress={() => setUserChoice(option)}\n        >\n          <Text style={styles.optionText}>{option}</Text>\n        </TouchableOpacity>\n      ));\n    } else {\n      return <Text>No options available</Text>;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Quest Forge Adventure</Text>\n      {data && data.scene && <Text style={styles.scene}>{data.scene}</Text>}\n      <View style={styles.optionsContainer}>\n        {renderOptions()}\n      </View>\n      <Button title=\"Submit Choice\" onPress={handleUserChoice} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  optionsContainer: {\n    marginVertical: 20,\n  },\n  optionButton: {\n    backgroundColor: '#f0f0f0',\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 5,\n  },\n  optionText: {\n    fontSize: 16,\n  },\n  scene: {\n    fontSize: 18,\n    marginBottom: 20,\n  }\n});\n\nexport default QuestForgeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}