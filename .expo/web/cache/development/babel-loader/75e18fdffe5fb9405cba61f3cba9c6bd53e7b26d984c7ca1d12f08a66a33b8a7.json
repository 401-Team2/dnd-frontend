{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Radio } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SERVER_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\nvar QuestForgeScreen = function QuestForgeScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userChoice = _useState4[0],\n    setUserChoice = _useState4[1];\n  useEffect(function () {\n    var _route$params, _route$params2;\n    if ((_route$params = route.params) != null && _route$params.newGame) {\n      fetchDataAndDisplay();\n    } else if ((_route$params2 = route.params) != null && _route$params2.character) {\n      var character = route.params.character;\n      continueGame(character);\n    }\n  }, [route.params]);\n  var fetchDataAndDisplay = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(`${SERVER_URL}/startgame`);\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function fetchDataAndDisplay() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var continueGame = function () {\n    var _ref3 = _asyncToGenerator(function* (character) {\n      try {\n        var response = yield axios.post(`${SERVER_URL}/loadgame`, {\n          characterId: character.id\n        });\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function continueGame(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleUserChoice = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(`${SERVER_URL}/adventure`, _objectSpread(_objectSpread({}, data), {}, {\n          userChoice: userChoice\n        }));\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    });\n    return function handleUserChoice() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: \"Quest Forge Adventure\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\nexport default QuestForgeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Button","Radio","StyleSheet","axios","jsx","_jsx","SERVER_URL","QuestForgeScreen","_ref","route","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","userChoice","setUserChoice","_route$params","_route$params2","params","newGame","fetchDataAndDisplay","character","continueGame","_ref2","_asyncToGenerator","response","post","error","console","apply","arguments","_ref3","characterId","id","_x","handleUserChoice","_ref4","_objectSpread","style","styles","container","children","title","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight"],"sources":["/Users/ryomazen/Documents/codefellows/projects/quest-forge-2.0-frontend/src/screens/QuestForgeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Button, Radio, StyleSheet } from 'react-native';\nimport axios from 'axios';\n\nconst SERVER_URL = 'https://tjmp838d98.execute-api.us-west-2.amazonaws.com/WorkingPOST';\n\nconst QuestForgeScreen = ({ route }) => {\n  const [data, setData] = useState(null);\n  const [userChoice, setUserChoice] = useState(null);\n\n  useEffect(() => {\n    if (route.params?.newGame) {\n      // Initialize new game logic\n      fetchDataAndDisplay();\n    } else if (route.params?.character) {\n      // Load the game with the selected character\n      const character = route.params.character;\n      continueGame(character);\n    }\n  }, [route.params]);\n\n  const fetchDataAndDisplay = async () => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/startgame`);\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const continueGame = async (character) => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/loadgame`, { characterId: character.id });\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleUserChoice = async () => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/adventure`, {\n        ...data,\n        userChoice,\n      });\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // Add render logic and UI components\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Quest Forge Adventure</Text>\n      {/* Implement the game UI here */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  // Add more styles as needed\n});\n\nexport default QuestForgeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}